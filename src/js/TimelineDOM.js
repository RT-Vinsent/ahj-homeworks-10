/* eslint-disable no-console */
export default class TimelineDOM {
  constructor() {
    this.container = null; // for container
    this.textSubmitListeners = []; /* –º–∞—Å—Å–∏–≤ –¥–ª—è callback-–∞ —Ñ—É–Ω–∫—Ü–∏–∏ onClickBtns */
    this.popUpSubmitListeners = []; /* –º–∞—Å—Å–∏–≤ –¥–ª—è callback-–∞ —Ñ—É–Ω–∫—Ü–∏–∏ onPopUpSubmit */
  }

  // –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–ª–∞—Å—Å—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  bindToDOM(container) {
    if (!(container instanceof HTMLElement)) {
      throw new Error('container is not HTMLElement');
    }
    this.container = container;
  }

  // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
  checkBinding() {
    if (this.container === null) {
      throw new Error('ListEditPlay not bind to DOM');
    }
  }

  // –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ HTML
  drawUI() {
    this.checkBinding();

    this.container.innerHTML = `
      <header class="header">
        <p>–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –∫ –∑–∞–Ω—è—Ç–∏—é "10. Geolocation, Notification, Media"</p>
        <p>Timeline</p>
      </header>
      <div class="timeline-container">
        <div class="timeline"></div>
        <form class="timeline-form">
          <input class="timeline-body-message"/>
          <div class="timeline-btns">
            <div class="timeline-btn" data-id="audio">üéôÔ∏è</div>
            <div class="timeline-btn" data-id="video">üé•</div>
            <div class="timeline-btn" data-id="text" type="submit">‚úâ</div>
          </div>
        </form>
        <form class="popup close">
          <div class="popup-container">
            <div class="popup-header">–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</div>
            <div class="popup-text">
              –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, 
              –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–∞–π—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏, 
              –ª–∏–±–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Ä—É—á–Ω—É—é.
            </div>
            <div class="popup-text">–®–∏—Ä–æ—Ç–∞ –∏ –¥–æ–ª–≥–æ—Ç–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é</div>
            <input type="text" class="popup-geo"/>
            <div class="popup-buttons">
              <button class="popup-btn" data-id="popup-submit" type="submit" autofocus>–û–ö</button>
              <button class="popup-btn" data-id="popup-cansel" type="cancel">–û—Ç–º–µ–Ω–∞</button>
            </div>
          </div>
        </form>
      </div>
    `;

    this.timeline = this.container.querySelector('.timeline');
    this.timelineForm = this.container.querySelector('.timeline-form');
    this.timelineBody = this.container.querySelector('.timeline-body-message');
    // this.btns = this.container.querySelector('.timeline-btns');
    this.popUp = this.container.querySelector('.popup');
    this.popUpGeoText = this.container.querySelector('.popup-geo');

    this.btnAudio = this.container.querySelector('[data-id="audio"]');
    this.btnVideo = this.container.querySelector('[data-id="video"]');
    this.btnText = this.container.querySelector('[data-id="text"]');

    this.timelineForm.addEventListener('submit', (event) => this.onTextSubmit(event));
    this.btnText.addEventListener('click', (event) => this.onTextSubmit(event));
    this.timelineBody.addEventListener('focus', () => this.onFocusClear('timelineBody'));
    this.popUpGeoText.addEventListener('focus', () => this.onFocusClear('popUpGeoText'));

    this.popUp.addEventListener('submit', (event) => this.onPopUpSubmit(event));
  }

  /*
  *  –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  *  –ø–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å date, body, geo
  *  –≤—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–µ–Ω—Ç—É
  */
  renderMessage(message) {
    const { date, body, geo } = message;

    const messageEl = document.createElement('div');
    messageEl.classList.add('message-container');
    messageEl.innerHTML = `
      <div class="message">
        <div class="message-date">${date}</div>
        <div class="message-body">${body}</div>
        <div class="message-geo">${geo} üëÅ</div>
      </div>
    `;
    // this.timeline.appendChild(messageEl);
    this.timeline.prepend(messageEl);
    this.timeline.scrollTo(0, -999999);
  }

  /* callback –º–µ—Ç–æ–¥–∞ onClickBtns –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–∑–æ–≤–∞ –≤ –∫–ª–∞—Å—Å–µ ChatControl */
  addTextSubmitListeners(callback) { this.textSubmitListeners.push(callback); }

  /*
  *  –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  *  –ø–µ—Ä–µ–¥–∞—ë—Ç –≤–≤–µ–¥—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  *  –≤ –º–µ—Ç–æ–¥ onClickBtns –∫–ª–∞—Å—Å–∞ TimelineControl
  */
  onTextSubmit(e) {
    e.preventDefault();
    const body = this.timelineBody.value;
    this.timelineBody.value = '';

    this.textSubmitListeners.forEach((o) => o.call(null, body));
  }

  /* callback –º–µ—Ç–æ–¥–∞ onClickBtns –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–∑–æ–≤–∞ –≤ –∫–ª–∞—Å—Å–µ ChatControl */
  addPopUpSubmitListeners(callback) { this.popUpSubmitListeners.push(callback); }

  /*
  *  –º–µ—Ç–æ–¥ –¥–ª—è —Ñ–æ—Ä–º—ã –≤–≤–µ–¥–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
  *  –ø–µ—Ä–µ–¥–∞—ë—Ç –≤–≤–µ–¥—ë–Ω–Ω—É—é –≤—Ä—É—á–Ω—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
  *  –≤ –º–µ—Ç–æ–¥ onPopUpSubmit –∫–ª–∞—Å—Å–∞ TimelineControl
  */
  onPopUpSubmit(e) {
    e.preventDefault();
    const submitEl = e.submitter;
    const dataID = submitEl.dataset.id;
    const geoStr = this.popUpGeoText.value;
    this.popUpSubmitListeners.forEach((o) => o.call(null, { dataID, geoStr }));
  }

  /*
  *  –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ placeholder –≤–Ω—É—Ç—Ä–∏ input
  *  –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–∫–∏
  *  –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ —Ç–µ–∫—Å—Ç
  */
  message(input, text) {
    this[input].placeholder = text;
  }

  /*
  *  –º–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –æ—à–∏–±–∫–∏ –∏ –∫–ª–∞—Å—Å–∞ –æ—à–∏–±–∫–∏ —É –∏–Ω–ø—É—Ç–∞
  *  —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∫–µ –∏–Ω–ø—É—Ç–∞
  */
  onFocusClear(input) {
    this.message(input, '');
    this[input].classList.remove('error-add');
  }

  /*
  *  –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –∏ –∫–ª–∞—Å—Å –æ—à–∏–±–∫–∏ –∏–Ω–ø—É—Ç–∞
  */
  errorInputAdd(input, text) {
    this[input].value = '';
    this.message(input, text);
    this[input].classList.add('error-add');
  }

  /*
  *  –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ–ø–∞–ø–∞
  */
  popupOpen() {
    this.message('popUpGeoText', '00.00000, 00.00000');
    this.popUp.classList.remove('close');
  }

  /*
  *  –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–ø–∞–ø–∞
  */
  popupClose() {
    this.onFocusClear('popUpGeoText');
    this.popUpGeoText.value = '';
    this.popUp.classList.add('close');
  }
}
